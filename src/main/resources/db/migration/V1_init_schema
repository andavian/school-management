-- Tabla de usuarios y seguridad
CREATE TABLE usuario (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    activo BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE rol (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE usuario_rol (
    usuario_id BIGINT,
    rol_id BIGINT,
    PRIMARY KEY (usuario_id, rol_id),
    FOREIGN KEY (usuario_id) REFERENCES usuario(id),
    FOREIGN KEY (rol_id) REFERENCES rol(id)
);

-- Personas
CREATE TABLE estudiante (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    dni VARCHAR(20) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    fecha_nacimiento DATE NOT NULL
);

CREATE TABLE tutor_responsable (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    telefono VARCHAR(30),
    email VARCHAR(100)
);

CREATE TABLE estudiante_tutor (
    estudiante_id BIGINT,
    tutor_id BIGINT,
    relacion VARCHAR(50),
    PRIMARY KEY (estudiante_id, tutor_id),
    FOREIGN KEY (estudiante_id) REFERENCES estudiante(id),
    FOREIGN KEY (tutor_id) REFERENCES tutor_responsable(id)
);

-- Académico
CREATE TABLE ciclo_lectivo (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    anio INT NOT NULL
);

CREATE TABLE curso (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(50),
    ciclo_id BIGINT,
    FOREIGN KEY (ciclo_id) REFERENCES ciclo_lectivo(id)
);

CREATE TABLE division (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(10),
    curso_id BIGINT,
    FOREIGN KEY (curso_id) REFERENCES curso(id)
);

CREATE TABLE matricula (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    estudiante_id BIGINT,
    division_id BIGINT,
    fecha DATE,
    estado VARCHAR(20),
    FOREIGN KEY (estudiante_id) REFERENCES estudiante(id),
    FOREIGN KEY (division_id) REFERENCES division(id)
);

CREATE TABLE espacio_curricular (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL
);

CREATE TABLE docente (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    usuario_id BIGINT UNIQUE,
    legajo VARCHAR(50),
    FOREIGN KEY (usuario_id) REFERENCES usuario(id)
);

CREATE TABLE asignacion_catedra (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    docente_id BIGINT,
    division_id BIGINT,
    espacio_id BIGINT,
    FOREIGN KEY (docente_id) REFERENCES docente(id),
    FOREIGN KEY (division_id) REFERENCES division(id),
    FOREIGN KEY (espacio_id) REFERENCES espacio_curricular(id)
);

-- Evaluaciones
CREATE TABLE instancia_evaluativa (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100),
    fecha DATE,
    tipo VARCHAR(50),
    division_id BIGINT,
    FOREIGN KEY (division_id) REFERENCES division(id)
);

CREATE TABLE calificacion (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    estudiante_id BIGINT,
    instancia_id BIGINT,
    nota DECIMAL(4,2),
    FOREIGN KEY (estudiante_id) REFERENCES estudiante(id),
    FOREIGN KEY (instancia_id) REFERENCES instancia_evaluativa(id)
);

-- Asistencia
CREATE TABLE jornada (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    fecha DATE NOT NULL,
    turno VARCHAR(20)
);

CREATE TABLE asistencia (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    estudiante_id BIGINT,
    jornada_id BIGINT,
    estado VARCHAR(20), -- presente/ausente/tarde/justificado
    FOREIGN KEY (estudiante_id) REFERENCES estudiante(id),
    FOREIGN KEY (jornada_id) REFERENCES jornada(id)
);

-- Auditoría
CREATE TABLE auditoria (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    usuario_id BIGINT,
    entidad VARCHAR(100),
    accion VARCHAR(50),
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuario(id)
);
